import os


BIN = os.path.expanduser('~/.local/bin')
ARG = os.path.expanduser('~/ref/argparse.git')


def build(env, bits, extra=''):
    suffix = str(bits if bits == 32 else '') + extra
    O = lambda x: x + '{}.o'.format(suffix)
    B = lambda x: x + '{}'.format(suffix)
    I = lambda x: x + '{}'.format(suffix)

    libhex = env.Object(O('libhex'), 'libhex.c')
    mixedradix = env.Object(O('mixedradix'), 'mixedradix.c')
    pat = env.Object(O('pat'), 'pat.c')
    pat = env.Program(B('pat'), pat + mixedradix + libhex)
    env.Alias(I('install'), env.Install(BIN, pat))


env = Environment(
    CC='gcc',
    CCFLAGS=['-O2'],
    LINKFLAGS=[''])
build(env, 64)


env = Environment(
    CC='gcc',
    CCFLAGS=['-O2', '-m32'],
    LINKFLAGS=['-m32'])
build(env, 32)


env = Environment(
    CC='i686-w64-mingw32-gcc',
    CCFLAGS=['-O2', '-m32'],
    LINKFLAGS=['-m32'])
build(env, 32, '.exe')


env = Environment(
    CC='x86_64-w64-mingw32-gcc',
    CCFLAGS=['-O2'],
    LINKFLAGS=[''])
build(env, 64, '.exe')
